// ICRC-1 Token Interface Definition

type Account = record {
    owner : principal;
    subaccount : opt blob;
};

type TransferArgs = record {
    from_subaccount : opt blob;
    to : Account;
    amount : nat;
    fee : opt nat;
    memo : opt blob;
    created_at_time : opt nat64;
};

type TransferError = variant {
    BadFee : record { expected_fee : nat };
    BadBurn : record { min_burn_amount : nat };
    InsufficientFunds : record { balance : nat };
    TooOld;
    CreatedInFuture : record { ledger_time : nat64 };
    Duplicate : record { duplicate_of : nat };
    TemporarilyUnavailable;
    GenericError : record { error_code : nat; message : text };
};

type TransferResult = variant {
    Ok : nat;
    Err : TransferError;
};

type Transaction = record {
    id : nat64;
    from : Account;
    to : Account;
    amount : nat;
    timestamp : nat64;
    memo : opt blob;
};

service : {
    // ICRC-1 Standard Methods
    icrc1_name : () -> (text) query;
    icrc1_symbol : () -> (text) query;
    icrc1_decimals : () -> (nat8) query;
    icrc1_fee : () -> (nat) query;
    icrc1_total_supply : () -> (nat) query;
    icrc1_minting_account : () -> (opt Account) query;
    icrc1_balance_of : (Account) -> (nat) query;
    icrc1_transfer : (TransferArgs) -> (TransferResult);
    icrc1_metadata : () -> (vec record { text; text; }) query;
    
    // Token Initialization
    icrc1_init : (
        text,     // name
        text,     // symbol
        nat8,     // decimals
        opt text, // description
        opt text, // logo
        nat,      // initial_supply
        nat       // fee
    ) -> (bool);
    
    // Extended Methods
    mint : (Account, nat) -> (TransferResult);
    burn : (Account, nat) -> (TransferResult);
    get_transactions : (nat64) -> (vec Transaction) query;
    get_all_accounts : () -> (vec record { Account; nat; }) query;
}; 